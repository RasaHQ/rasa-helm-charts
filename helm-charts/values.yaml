# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas
replicaCount: 1

image:
  # -- URL to the image repository
  repository: miraai/user-greeting-service
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag
  # Overrides the image tag whose default is the chart appVersion.
  tag: v2

# -- Image pull secrets for private repositories
imagePullSecrets: []
# -- Chart name override
nameOverride: "greeting-service"
# -- Full chart name override
fullnameOverride: "greeting-service"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to add to the pods
podAnnotations: {}

# -- Pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 9090

ingress:
  # -- Specifies whether an ingress should be created
  enabled: false
  # -- Ingress class name
  className: ""
  # -- Annotation to add to the ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # -- Ingress hosts
    - host: chart-example.local
      paths:
        # -- Ingress hosts path
        - path: /
          # -- Ingress hosts path type
          pathType: ImplementationSpecific
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # -- Resource limits
  limits:
    # -- Resource CPU limits
    cpu: 200m
    # -- Resource Memory limits
    memory: 128Mi
  # -- Resource requests
  requests:
    # -- Resource CPU requests
    cpu: 100m
    # -- Resource Memory requests
    memory: 128Mi

autoscaling:
  # -- Specifies whether to enable autoscaling
  enabled: false
  # -- Specifies minimum number of replicas
  minReplicas: 1
  # -- Specifies maximum number of replicas
  maxReplicas: 5
  # -- Specifies target CPU utilization in precentages when to start scaling based on CPU
  # Use `targetMemoryUtilizationPercentage` for scaling based on Memory utilization
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Specifies node selector
nodeSelector: {}

# -- Specifies tolerations
tolerations: []

# -- Specifies affinity
affinity: {}

redis:
  # -- Specifies Redis replica counts
  replicaCount: 1

  image:
    # -- Redis image repository
    repository: redis
    # -- Redis image pull policy
    pullPolicy: IfNotPresent
    # -- Redis image tag
    tag: alpine3.17

  # -- Redis image pull secrets for private repositories
  imagePullSecrets: []

  serviceAccount:
    # -- Specifies whether to enable Redis service account creation
    create: true
    # -- Specifies Redis service account annotations
    annotations: 
    # -- Specifies Redis service account name.
    # If left empty, default service account name will be used.
    name: ""

  # -- Redis pod annotations
  podAnnotations: {}
  # -- Redis pod security context
  podSecurityContext: {}
  # -- Redis security context
  securityContext: {}

  service:
    # -- Redis service type
    type: ClusterIP
    # -- Redis service port
    port: 6379

  container:
    # -- Redis container port
    port: 6379

  resources:
    # -- Redis resource limits
    limits:
      # -- Redis CPU resource limits
      cpu: 100m
      # -- Redis Memory resource limits
      memory: 128Mi
    # -- Redis resource requests
    requests:
      # -- Redis CPU resource requests
      cpu: 100m
      # -- Redis Memory resource requests
      memory: 128Mi

  autoscaling:
    # -- Specifies whether to enable autoscaling
    enabled: false
    # -- Specifies minimum number of replicas
    minReplicas: 1
    # -- Specifies maximum number of replicas
    maxReplicas: 5
    # -- Specifies target CPU utilization in precentages when to start scaling based on CPU
    # Use `targetMemoryUtilizationPercentage` for scaling based on Memory utilization
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Specifies Redis node selector
  nodeSelector: {}
  # -- Specifies Redis tolerations
  tolerations: []
  # -- Specifies Redis affinity
  affinity: {}
