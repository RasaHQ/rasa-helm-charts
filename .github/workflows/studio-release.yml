name: Release Studio Helm Chart

on:
  push:
    branches:
      - main
    paths:
      - 'charts/studio/**'
      - '!charts/rasa/**'
      - '!replicated/**'

env:
  ARTIFACT_REGISTRY: europe-west3-docker.pkg.dev
  HELM_REPOSITORY: rasa-releases
  HELM_CHART: helm-charts
  GCP_BUCKET_CREDENTIALS: ${{ secrets.GCP_BUCKET_CREDENTIALS }}
  KAFKA_HELM_VERSION: 26.11.1
  POSTGRESQL_HELM_VERSION: 13.4.0
  NGINX_HELM_VERSION: 4.9.1

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0

      - name: Install Helm 3
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78
        with:
          version: v3.11.2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d
        with:
          token_format: 'access_token'
          credentials_json: ${{ secrets.HELM_RELEASE_CREDENTIALS }}

      - name: Login to Helm registry using Google Auth token
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | helm registry login -u oauth2accesstoken --password-stdin https://${{ env.ARTIFACT_REGISTRY }}

      - name: Read Helm Chart
        id: chart-info
        uses: miraai/read-helm-chart-yaml@9a798908719da8d062b86097d4ff1ad85abfc7aa
        with:
          path: charts/studio/

      - name: Package Helm release
        id: package
        run: helm package charts/studio/ --dependency-update

      - name: Push Helm Charts to Google Artifact Registry
        id: release
        run: helm push ${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}.tgz oci://${{ env.ARTIFACT_REGISTRY }}/${{ env.HELM_REPOSITORY }}/${{ env.HELM_CHART }}

      - name: Notify Slack of successful release üí¨
        if: steps.release.outcome == 'success'
        uses: slackapi/slack-github-action@007b2c3c751a190b6f0f040e47ed024deaa72844
        with:
          # Send notication to #release slack channel
          channel-id: 'C024Z61K9QU'
          slack-message: "üöÄ New *Studio* Helm Chart version `${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}` has been released!"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify Slack of unsuccessful release ‚õîÔ∏è
        if: steps.release.outcome == 'failure'
        uses: slackapi/slack-github-action@007b2c3c751a190b6f0f040e47ed024deaa72844
        with:
          # Send notication to #release slack channel
          channel-id: 'C024Z61K9QU'
          slack-message: "‚õîÔ∏è *Studio* Helm Chart version `${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}` could not be released üò±! Please check out <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Github Action workflow log>"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
      - name: Get previous release tag
        id: previous-release
        uses: JinoArch/get-latest-tag@4a55da58d123a16b749c152b45c15f1ead139d42

      - name: Create Studio Release Tag
        uses: rickstaa/action-create-tag@55450aa830ede05bcbb37fbdad678e36c73e9d15
        with:
          tag: "${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}"

      - name: Build Studio changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@6fd5cc6eaf7567dbd0f9666061215bb476f012fc
        with:
          configurationJson: |
            {
              "categories": [
                {
                    "title": "## üöÄ Studio Helm Chart",
                    "labels": ["studio"]
                }
              ]
            }
          fromTag: "${{ steps.previous-release.outputs.latestTag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Studio Release
        uses: mikepenz/action-gh-release@ac23f2c4388204c6081863ead928a6f05fd7838a
        with:
          tag_name: ${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}

  release-to-replicated:
    runs-on: ubuntu-22.04
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0

      - name: Install Helm 3
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78
        with:
          version: v3.11.2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d
        with:
          token_format: 'access_token'
          credentials_json: ${{ secrets.HELM_RELEASE_CREDENTIALS }}

      - name: Login to Helm registry using Google Auth token
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | helm registry login -u oauth2accesstoken --password-stdin https://${{ env.ARTIFACT_REGISTRY }}

      - name: Read Helm Chart
        id: chart-info
        uses: miraai/read-helm-chart-yaml@9a798908719da8d062b86097d4ff1ad85abfc7aa
        with:
          path: charts/studio/

      - name: Add Helm Chart repositories
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

      - name: Pull Helm Charts
        id: get_chart
        run: |
          helm pull oci://${{ env.ARTIFACT_REGISTRY }}/${{ env.HELM_REPOSITORY }}/${{ env.HELM_CHART }}/${{ steps.chart-info.outputs.name }} --version ${{ steps.chart-info.outputs.version }} -d ./replicated
          helm pull ingress-nginx/ingress-nginx --version ${{ env.NGINX_HELM_VERSION }} -d ./replicated
          helm pull oci://registry-1.docker.io/bitnamicharts/postgresql --version ${{ env.POSTGRESQL_HELM_VERSION }} -d ./replicated
          helm pull oci://registry-1.docker.io/bitnamicharts/kafka --version ${{ env.KAFKA_HELM_VERSION }} -d ./replicated

      - name: Update Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec.chart.chartVersion = "${{ steps.chart-info.outputs.version }}"' replicated/studio-chart.yaml

      - name: Update Kafka Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec.chart.chartVersion = "${{ env.KAFKA_HELM_VERSION }}"' replicated/kafka-chart.yaml

      - name: Update PostgresSQL Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec.chart.chartVersion = "${{ env.POSTGRESQL_HELM_VERSION }}"' replicated/postgresql-chart.yaml

      - name: Update Nginx Ingress Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec.chart.chartVersion = "${{ env.NGINX_HELM_VERSION }}"' replicated/ingress-nginx-chart.yaml

      - name: Create the stable release
        uses: replicatedhq/action-kots-release@configurable-endpoint
        with:
          replicated-app: ${{ secrets.REPLICATED_APP }}
          replicated-api-token: ${{ secrets.REPLICATED_TOKEN }}
          replicated-api-origin: https://api.replicated.com/vendor
          yaml-dir: ./replicated
          promote-channel: "Stable"
          version: ${{ steps.chart-info.outputs.version }}
