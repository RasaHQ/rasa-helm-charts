# Default values for studio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

############################
# THIS IS WORK IN PROGRESS #
############################

# -- (string) Override name of app
nameOverride: ""
# -- (string) Override the full qualified app name
fullnameOverride: ""

# -- Repository pull secrets
imagePullSecrets:
  []
  # - name: regcred

# Disable this in case you only want to deploy MTS/MRS
studioEnabled: true

# -- Specifies image repository
repository: "europe-west3-docker.pkg.dev/rasa-releases/studio/"
# -- Specifies image tag
## Overrides the image tag whose default is the chart appVersion.
tag: "0.1.3"

# Studio Backend component specific configuration
backend:
  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    name: "studio-backend"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent

  # -- Define environment variables for deployment
  # Example: Specify the string value for variables
  #   value: my-value
  # Example: Specify the value for variables sourced from a Secret.
  #   secret:
  #     name: my-secret
  #     key: my-secret-key
  # NOTE: Helm will return an error if environment variable does not have `value` or `secret` provided.
  environmentVariables:
    DATABASE_URL:
      secret:
        name: "studio-secrets"
        key: "DATABASE_URL"
    KEYCLOAK_URL:
      value: ""
    KEYCLOAK_REALM:
      value: "rasa-local-dev"
    KEYCLOAK_API_CLIENT_ID:
      value: "admin-cli"
    KEYCLOAK_API_USERNAME:
      value: ""
    KEYCLOAK_API_PASSWORD:
      secret:
        name: "studio-secrets"
        key: "KEYCLOAK_API_PASSWORD"
    KEYCLOAK_API_GRANT_TYPE:
      value: "password"

  # -- backend.envFrom is used to add environment variables from ConfigMap or Secret
  envFrom:
    []
    # - configMapRef:
    #     name: my-configmap

  # -- backend.additionalContainers allows to specify additional containers for the deployment
  additionalContainers: []
  #  - name: extra
  #    image: "busybox"
  #    command: ["bash", "-c"]

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations:
    {}
    # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Define service
  service:
    # -- Specify service type
    type: ClusterIP
    # -- Specify service port
    port: 80
    # -- Specify service target port
    targetPort: 4000

  # -- Override default liveness probe settings
  livenessProbe:
    enabled: true
    httpGet:
      path: /api/health
      port: 4000
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Override default readiness probe settings
  readinessProbe:
    enabled: true
    httpGet:
      path: /api/health
      port: 4000
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Define Studio Database Migration job settings
  migration:
    # -- Specifies whether a database migration job should be created
    enable: true
    # -- Specifies which image database migration job should use
    image:
      # -- Specifies the repository of the image
      name: "studio-database-migration"
      # -- Specifies image pull policy
      pullPolicy: IfNotPresent

  # -- Configure the ingress resource that allows you to access the deployment installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Specifies whether an ingress service should be created
    enabled: true
    # -- Specifies the ingress className to be used
    className: ""
    # -- Labels to add to the ingress
    labels: {}
    # -- Annotations to add to the ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Specifies the hosts for this ingress
    hosts:
      - host: chart-example.local
        paths:
          - path: /api
            pathType: Prefix
        extraPaths: []
    # -- Spefices the TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Specifies the resources limits and requests
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Specifies the HPA settings
  autoscaling:
    # -- Specifies whether autoscaling should be enabled
    enabled: false
    # -- Specifies the minimum number of replicas
    minReplicas: 1
    # -- Specifies the maximum number of replicas
    maxReplicas: 100
    # -- Specifies the target CPU/Memory utilization percentage
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Studio Web Client component specific configuration
webClient:
  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    name: "studio-web-client"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent

  # -- Define environment variables for deployment
  environmentVariables:
    API_ENDPOINT: ""
    KEYCLOAK_URL: ""
    KEYCLOAK_REALM: "rasa-local-dev"
    KEYCLOAK_CLIENT_ID: "studio-local"

  # -- webClient.envFrom is used to add environment variables from ConfigMap or Secret
  envFrom:
    []
    # - configMapRef:
    #     name: my-configmap

  # -- webClient.additionalContainers allows to specify additional containers for the deployment
  additionalContainers: []
  #  - name: extra
  #    image: "busybox"
  #    command: ["bash", "-c"]

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/studio-web-client: runtime/default

  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Define service
  service:
    # -- Specify service type
    type: ClusterIP
    # -- Specify service port
    port: 80
    targetPort: 80

  # -- Override default liveness probe settings
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Override default readiness probe settings
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Configure the ingress resource that allows you to access the deployment installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Specifies whether an ingress service should be created
    enabled: true
    # -- Specifies the ingress className to be used
    className: ""
    # -- Labels to add to the ingress
    labels: {}
    # -- Annotations to add to the ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Specifies the hosts for this ingress
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
        extraPaths: []
    # -- Spefices the TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Specifies the resources limits and requests
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Studio Event Ingestion component specific configuration
eventIngestion:
  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    name: "studio-event-ingestion"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent

  # -- Define environment variables for deployment
  # Example: Specify the string value for variables
  #   value: my-value
  # Example: Specify the value for variables sourced from a Secret.
  #   secret:
  #     name: my-secret
  #     key: my-secret-key
  # NOTE: Helm will return an error if environment variable does not have `value` or `secret` provided.
  environmentVariables:
    DATABASE_URL:
      secret:
        name: "studio-secrets"
        key: "DATABASE_URL"
    # Set to true if you want to use SSL
    KAFKA_ENABLE_SSL:
      value: ""
    # Set to true if you want to use SSL with custom certs
    KAFKA_CUSTOM_SSL:
      value: ""
    # Path to the CA file
    KAFKA_CA_FILE:
      value: ""
    # Path to the client key file
    KAFKA_KEY_FILE:
      value: ""
    # Path to the client certificate file
    KAFKA_CERT_FILE:
      value: ""
    # Defaults to true, the server certificate is verified against the list of supplied CA
    KAFKA_REJECT_UNAUTHORIZED:
      value: ""
    # Instructs the application to allow untrusted certificates. Set this to 0 if using untrusted certificates for Kafka.
    NODE_TLS_REJECT_UNAUTHORIZED:
      value: ""
    # Supported values are plain, scram-sha-256 or scram-sha-512. You can leave it empty if you are not using SASL.
    KAFKA_SASL_MECHANISM:
      value: ""
    KAFKA_SASL_USERNAME:
      value: ""
    KAFKA_SASL_PASSWORD:
      secret:
        name: "studio-secrets"
        key: "KAFKA_SASL_PASSWORD"
    KAFKA_BROKER_ADDRESS:
      value: ""
    KAFKA_TOPIC:
      value: ""
    KAFKA_DLQ_TOPIC:
      value: ""
    KAFKA_CLIENT_ID:
      value: "kafka-python-rasa"
    KAFKA_GROUP_ID:
      value: ""

  # -- eventIngestion.envFrom is used to add environment variables from ConfigMap or Secret
  envFrom:
    []
    # - configMapRef:
    #     name: my-configmap

  # -- eventIngestion.additionalContainers allows to specify additional containers for the deployment
  additionalContainers: []
  #  - name: extra
  #    image: "busybox"
  #    command: ["bash", "-c"]

  # -- eventIngestion.volumes specify additional volumes for the Studio event ingestion container
  ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
  volumes:
    []
    # - hostPath:
    #   path: <HOST_PATH>
    #   name: <VOLUME_NAME>

  # -- eventIngestion.volumeMounts specifies additional volumes to mount in the Studio event ingestion container
  volumeMounts:
    []
    # - name: <VOLUME_NAME>
    #   mountPath: <CONTAINER_PATH>
    #   readOnly: true

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations:
    {}
    # container.apparmor.security.beta.kubernetes.io/studio-event-ingestion: runtime/default

  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Specifies the resources limits and requests
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Specifies the HPA settings
  autoscaling:
    # -- Specifies whether autoscaling should be enabled
    enabled: false
    # -- Specifies the minimum number of replicas
    minReplicas: 1
    # -- Specifies the maximum number of replicas
    maxReplicas: 100
    # -- Specifies the target CPU/Memory utilization percentage
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Studio Keycloak component specific configuration
keycloak:
  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    name: "studio-keycloak"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent

  # -- Define environment variables for deployment
  environmentVariables:
    KC_DB_URL:
      value: ""
    KEYCLOAK_ADMIN:
      value: ""
    KEYCLOAK_ADMIN_PASSWORD:
      secret:
        name: "studio-secrets"
        key: "KEYCLOAK_ADMIN_PASSWORD"
    KC_DB_USERNAME:
      value: ""
    KC_DB_PASSWORD:
      secret:
        name: "studio-secrets"
        key: "KC_DB_PASSWORD"
    # Use SSL for Keycloak database connection used during db migration
    KC_DB_SSL:
      value: ""
    # If true the server will reject db connection which is not authorized with the list of supplied CAs.
    KC_REJECT_UNAUTHORIZED:
      value: ""
    # Set value to edge to enable communication through HTTP between the proxy/load balancer and Keycloak. Useful for highly secure internal network where the reverse proxy keeps a secure connection (HTTP over TLS) with clients while communicating with Keycloak using HTTP.
    KC_PROXY:
      value: ""

  # -- keycloak.envFrom is used to add environment variables from ConfigMap or Secret
  envFrom:
    []
    # - configMapRef:
    #     name: my-configmap

  # -- keycloak.additionalContainers allows to specify additional containers for the deployment
  additionalContainers: []
  #  - name: extra
  #    image: "busybox"
  #    command: ["bash", "-c"]

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations:
    {}
    # container.apparmor.security.beta.kubernetes.io/studio-keycloak: runtime/default

  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Define service
  service:
    # -- Specify service type
    type: ClusterIP
    # -- Specify service port
    port: 80
    targetPort: 8080

  # -- Override default liveness probe settings
  livenessProbe:
    enabled: true
    httpGet:
      path: /auth
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Override default readiness probe settings
  readinessProbe:
    enabled: true
    httpGet:
      path: /auth
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Configure the ingress resource that allows you to access the deployment installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Specifies whether an ingress service should be created
    enabled: true
    # -- Specifies the ingress className to be used
    className: ""
    # -- Labels to add to the ingress
    labels: {}
    # -- Annotations to add to the ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Specifies the hosts for this ingress
    hosts:
      - host: chart-example.local
        paths:
          - path: /auth
            pathType: Prefix
        extraPaths: []
    # -- Spefices the TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Specifies the resources limits and requests
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Model Training Service specific configuration
modelTrainingService:
  enabled: true

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  orchestrator:
    # -- Specifies number of replicas
    replicaCount: 1
    # -- Define image settings
    image:
      # -- Specifies image repository
      repository: "europe-west3-docker.pkg.dev/rasa-releases/mts-orchestrator/"
      # -- Specifies image name
      name: "mts-orchestrator"
      # -- SPecifies image tag
      tag: "1.1.1"
      # -- Specifies image pull policy
      pullPolicy: IfNotPresent

    # -- Define environment variables for deployment
    # Example: Specify the string value for variables
    #   value: my-value
    # Example: Specify the value for variables sourced from a Secret.
    #   secret:
    #     name: my-secret
    #     key: my-secret-key
    # NOTE: Helm will return an error if environment variable does not have `value` or `secret` provided.
    environmentVariables:
      RUNS_IN_CLUSTER:
        value: "true"
      KUBERNETES_NAMESPACE:
        value: ""
      AUTHENTICATION_ENDPOINT_ENABLED:
        value: "false"
      ENABLE_AUTHORIZATION:
        value: "false"
      KAFKA_BROKER_ADDRESS:
        value: ""
      KAFKA_SECURITY_PROTOCOL:
        value: ""
      TRAINING_RESULT_TOPIC:
        value: "password"
      TRAINING_RESULT_CONSUMER_GROUP_ID:
        value: ""
      TRAINING_JOB_TOPIC:
        value: ""
      GOOGLE_CLOUD_PROJECT:
        value: ""
      CLOUDSDK_COMPUTE_ZONE:
        value: ""
      THIRD_PARTY_STORAGE_BUCKET:
        value: ""
      TRAINING_STORAGE:
        value: ""
      TRAINING_STORAGE_BUCKET:
        value: ""
      GOOGLE_APPLICATION_CREDENTIALS:
        value: ""
      TRAINING_STORAGE_SIGNED_URL_SERVICE_ACCOUNT:
        secret:
          name: "mts-secrets"
          key: "TRAINING_STORAGE_SIGNED_URL_SERVICE_ACCOUNT"
      KEYCLOAK_SERVER_URL:
        value: ""
      KEYCLOAK_REALM:
        value: ""
      KEYCLOAK_CLIENT_ID:
        value: ""
      KEYCLOAK_CLIENT_SECRET:
        secret:
          name: "mts-secrets"
          key: "KEYCLOAK_CLIENT_SECRET"


    # -- backend.envFrom is used to add environment variables from ConfigMap or Secret
    envFrom:
      []
      # - configMapRef:
      #     name: my-configmap

    # -- eventIngestion.volumes specify additional volumes for the Studio event ingestion container
    ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
    volumes:
      []
      # - hostPath:
      #   path: <HOST_PATH>
      #   name: <VOLUME_NAME>

    # -- eventIngestion.volumeMounts specifies additional volumes to mount in the Studio event ingestion container
    volumeMounts:
      []
      # - name: <VOLUME_NAME>
      #   mountPath: <CONTAINER_PATH>
      #   readOnly: true

    # -- backend.additionalContainers allows to specify additional containers for the deployment
    additionalContainers: []
    #  - name: extra
    #    image: "busybox"
    #    command: ["bash", "-c"]

    # -- Annotations to add to the pod
    podAnnotations:
      {}
      # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

    # -- Define pod security context
    podSecurityContext:
      enabled: true
      # fsGroup: 2000

    # -- Define security context that allows you to overwrite the pod-level security context
    securityContext:
      enabled: true
      # privileged: false
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
      # seccompProfile:
      #   type: RuntimeDefault

    # -- Define service
    service:
      # -- Specify service type
      type: ClusterIP
      # -- Specify service port
      port: 8000
      # -- Specify service target port
      targetPort: 8000

    # -- Override default liveness probe settings
    livenessProbe:
      enabled: true
      httpGet:
        path: /
        port: 8000
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
      failureThreshold: 6

    # -- Override default readiness probe settings
    readinessProbe:
      enabled: true
      httpGet:
        path: /
        port: 8000
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
      failureThreshold: 6

    # -- Specifies the resources limits and requests
    resources:
      {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    # -- Allow the deployment to be scheduled on selected nodes
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # -- Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    # -- Allow the deployment to schedule using affinity rules
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

  consumer:
    # -- Specifies number of replicas
    replicaCount: 1
    # -- Define image settings
    image:
      # -- Specifies image repository
      repository: "europe-west3-docker.pkg.dev/rasa-releases/mts-job-consumer/"
      # -- Specifies image name
      name: "mts-job-consumer"
      # -- SPecifies image tag
      tag: "1.1.1"
      # -- Specifies image pull policy
      pullPolicy: IfNotPresent

    # -- Define environment variables for deployment
    # Example: Specify the string value for variables
    #   value: my-value
    # Example: Specify the value for variables sourced from a Secret.
    #   secret:
    #     name: my-secret
    #     key: my-secret-key
    # NOTE: Helm will return an error if environment variable does not have `value` or `secret` provided.
    environmentVariables:
      RUNS_IN_CLUSTER:
        value: "true"
      KUBERNETES_NAMESPACE:
        value: ""
      KAFKA_BROKER_ADDRESS:
        value: ""
      KAFKA_SECURITY_PROTOCOL:
        value: ""
      KAFKA_JOB_TOPIC:
        value: ""
      MODEL_TRAINING_KAFKA_CONSUMER_ID:
        value: ""
      KAFKA_RESULT_TOPIC:
        value: "password"
      GOOGLE_CLOUD_PROJECT:
        value: ""
      CLOUDSDK_COMPUTE_ZONE:
        value: ""
      TRAINING_STORAGE:
        value: ""
      GCS_BUCKET_NAME:
        value: ""
      KUBERNETES_BASE_TRAINING_DATA_PATH:
        value: "/home"
      KUBERNETES_JOB_BOT_CONFIG_MOUNT:
        value: "/app"
      KUBERNETES_DATA_PVC:
        value: ""
      GOOGLE_APPLICATION_CREDENTIALS:
        value: ""
      RASA_PRO_LICENSE_SECRET_NAME:
        value: ""
      RASA_PRO_LICENSE_SECRET_KEY:
        value: ""

    # -- backend.envFrom is used to add environment variables from ConfigMap or Secret
    envFrom:
      []
      # - configMapRef:
      #     name: my-configmap

    # -- eventIngestion.volumes specify additional volumes for the Studio event ingestion container
    ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
    volumes:
      []
      # - hostPath:
      #   path: <HOST_PATH>
      #   name: <VOLUME_NAME>

    # -- eventIngestion.volumeMounts specifies additional volumes to mount in the Studio event ingestion container
    volumeMounts:
      []
      # - name: <VOLUME_NAME>
      #   mountPath: <CONTAINER_PATH>
      #   readOnly: true

    # -- backend.additionalContainers allows to specify additional containers for the deployment
    additionalContainers: []
    #  - name: extra
    #    image: "busybox"
    #    command: ["bash", "-c"]

    # -- Annotations to add to the pod
    podAnnotations:
      {}
      # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

    # -- Define pod security context
    podSecurityContext:
      enabled: true
      # fsGroup: 2000

    # -- Define security context that allows you to overwrite the pod-level security context
    securityContext:
      enabled: true
      # privileged: false
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
      # seccompProfile:
      #   type: RuntimeDefault

    # -- Specifies the resources limits and requests
    resources:
      {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    # -- Allow the deployment to be scheduled on selected nodes
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # -- Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    # -- Allow the deployment to schedule using affinity rules
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

  persistence:
    # -- Should the PV and PVC be created
    # It is good practice to create volumes once ana then reuse them.
    # So set this value to true only when you are deploying the service for the first time.
    # If you are redeploying the service, set this value to false.
    create: true
    # -- Type of the volume that will be used to store the training data
    # Valid values: local, nfs
    type: local
    # -- Storage Class name for PV
    storageClassName: ""
    # -- Storage Capacity for PV
    storageCapacity: 1Gi
    # -- Storage requests for PVC
    storageRequests: 1Gi
    # -- DNS name or IP address of the NFS server
    # This value is used only when type is set to nfs
    nfsServer:
    # -- Directory from the host machine that will be mounted to the container for training data
    # This value is used only when type is set to local
    hostPath:
    # -- Node on which the PV will be created
    # This value is used only when type is set to local
    localNodeName:

# Model Running Service specific configuration
modelRunningService:
  enabled: true

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  orchestrator:
    # -- Specifies number of replicas
    replicaCount: 1
    # -- Define image settings
    image:
      # -- Specifies image repository
      repository: "europe-west3-docker.pkg.dev/rasa-releases/mrs-orchestrator/"
      # -- Specifies image name
      name: "mrs-orchestrator"
      # -- SPecifies image tag
      tag: "1.1.1"
      # -- Specifies image pull policy
      pullPolicy: IfNotPresent

    # -- Define environment variables for deployment
    # Example: Specify the string value for variables
    #   value: my-value
    # Example: Specify the value for variables sourced from a Secret.
    #   secret:
    #     name: my-secret
    #     key: my-secret-key
    # NOTE: Helm will return an error if environment variable does not have `value` or `secret` provided.
    environmentVariables:
      RUNS_IN_CLUSTER:
        value: "true"
      KUBERNETES_NAMESPACE:
        value: ""
      KAFKA_BROKER_ADDRESS:
        value: ""
      KAFKA_SECURITY_PROTOCOL:
        value: ""
      DEPLOYMENT_RESULT_TOPIC:
        value: "password"
      DEPLOYMENT_RESULT_CONSUMER_GROUP_ID:
        value: ""
      DEPLOYMENT_JOB_TOPIC:
        value: ""
      LOGGING_LEVEL:
        value: ""

    # -- backend.envFrom is used to add environment variables from ConfigMap or Secret
    envFrom:
      []
      # - configMapRef:
      #     name: my-configmap

    # -- eventIngestion.volumes specify additional volumes for the Studio event ingestion container
    ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
    volumes:
      []
      # - hostPath:
      #   path: <HOST_PATH>
      #   name: <VOLUME_NAME>

    # -- eventIngestion.volumeMounts specifies additional volumes to mount in the Studio event ingestion container
    volumeMounts:
      []
      # - name: <VOLUME_NAME>
      #   mountPath: <CONTAINER_PATH>
      #   readOnly: true

    # -- backend.additionalContainers allows to specify additional containers for the deployment
    additionalContainers: []
    #  - name: extra
    #    image: "busybox"
    #    command: ["bash", "-c"]

    # -- Annotations to add to the pod
    podAnnotations:
      {}
      # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

    # -- Define pod security context
    podSecurityContext:
      enabled: true
      # fsGroup: 2000

    # -- Define security context that allows you to overwrite the pod-level security context
    securityContext:
      enabled: true
      # privileged: false
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
      # seccompProfile:
      #   type: RuntimeDefault

    # -- Define service
    service:
      # -- Specify service type
      type: ClusterIP
      # -- Specify service port
      port: 8001
      # -- Specify service target port
      targetPort: 8001

    # -- Override default liveness probe settings
    livenessProbe:
      enabled: true
      httpGet:
        path: /
        port: 8001
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
      failureThreshold: 6

    # -- Override default readiness probe settings
    readinessProbe:
      enabled: true
      httpGet:
        path: /
        port: 8001
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
      failureThreshold: 6

    # -- Specifies the resources limits and requests
    resources:
      {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    # -- Allow the deployment to be scheduled on selected nodes
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # -- Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    # -- Allow the deployment to schedule using affinity rules
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

  consumer:
    # -- Specifies number of replicas
    replicaCount: 1
    # -- Define image settings
    image:
      # -- Specifies image repository
      repository: "europe-west3-docker.pkg.dev/rasa-releases/mrs-job-consumer/"
      # -- Specifies image name
      name: "mrs-job-consumer"
      # -- SPecifies image tag
      tag: "1.1.1"
      # -- Specifies image pull policy
      pullPolicy: IfNotPresent

    # -- Define environment variables for deployment
    # Example: Specify the string value for variables
    #   value: my-value
    # Example: Specify the value for variables sourced from a Secret.
    #   secret:
    #     name: my-secret
    #     key: my-secret-key
    # NOTE: Helm will return an error if environment variable does not have `value` or `secret` provided.
    environmentVariables:
      RUNS_IN_CLUSTER:
        value: "true"
      KUBERNETES_NAMESPACE:
        value: ""
      KAFKA_BROKER_ADDRESS:
        value: ""
      KAFKA_SECURITY_PROTOCOL:
        value: ""
      DEPLOYMENT_JOB_KAFKA_TOPIC:
        value: ""
      MODEL_DEPLOYMENT_KAFKA_CONSUMER_ID:
        value: ""
      KAFKA_DEPLOYMENT_RESULT_TOPIC:
        value: "password"
      GOOGLE_CLOUD_PROJECT:
        value: ""
      CLOUDSDK_COMPUTE_ZONE:
        value: ""
      TRAINING_STORAGE:
        value: ""
      BOT_CONFIG_FETCHER_TYPE:
        value: ""
      GCS_BUCKET_NAME:
        value: ""
      KUBERNETES_BASE_BOT_DATA_PATH:
        value: "/home"
      KUBERNETES_JOB_BOT_CONFIG_MOUNT:
        value: "/app"
      KUBERNETES_DATA_PVC:
        value: ""
      GOOGLE_APPLICATION_CREDENTIALS:
        value: ""
      RASA_PRO_LICENSE_SECRET_NAME:
        value: ""
      RASA_PRO_LICENSE_SECRET_KEY:
        value: ""

    # -- backend.envFrom is used to add environment variables from ConfigMap or Secret
    envFrom:
      []
      # - configMapRef:
      #     name: my-configmap

    # -- eventIngestion.volumes specify additional volumes for the Studio event ingestion container
    ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
    volumes:
      []
      # - hostPath:
      #   path: <HOST_PATH>
      #   name: <VOLUME_NAME>

    # -- eventIngestion.volumeMounts specifies additional volumes to mount in the Studio event ingestion container
    volumeMounts:
      []
      # - name: <VOLUME_NAME>
      #   mountPath: <CONTAINER_PATH>
      #   readOnly: true

    # -- backend.additionalContainers allows to specify additional containers for the deployment
    additionalContainers: []
    #  - name: extra
    #    image: "busybox"
    #    command: ["bash", "-c"]

    # -- Annotations to add to the pod
    podAnnotations:
      {}
      # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

    # -- Define pod security context
    podSecurityContext:
      enabled: true
      # fsGroup: 2000

    # -- Define security context that allows you to overwrite the pod-level security context
    securityContext:
      enabled: true
      # privileged: false
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
      # seccompProfile:
      #   type: RuntimeDefault

    # -- Specifies the resources limits and requests
    resources:
      {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    # -- Allow the deployment to be scheduled on selected nodes
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # -- Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    # -- Allow the deployment to schedule using affinity rules
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

  persistence:
    # -- Should the PV and PVC be created
    # It is good practice to create volumes once ana then reuse them.
    # So set this value to true only when you are deploying the service for the first time.
    # If you are redeploying the service, set this value to false.
    create: true
    # -- Type of the volume that will be used to store the training data
    # Valid values: local, nfs
    type: local
    # -- Storage Class name for PV
    storageClassName: ""
    # -- Storage Capacity for PV
    storageCapacity: 1Gi
    # -- Storage requests for PVC
    storageRequests: 1Gi
    # -- DNS name or IP address of the NFS server
    # This value is used only when type is set to nfs
    nfsServer:
    # -- Directory from the host machine that will be mounted to the container for training data
    # This value is used only when type is set to local
    hostPath:
    # -- Node on which the PV will be created
    # This value is used only when type is set to local
    localNodeName:


# Network policy settings
networkPolicy:
  # -- Specifies whether to enable network policies
  enabled: false
  # -- Specifies whether to apply denyAll network policy
  denyAll: false
  # -- Allow for traffic from a given CIDR - it's required in order to make kubelet able to run live and readiness probes
  nodeCIDR: []
  #  - ipBlock:
  #      cidr: 0.0.0.0/0

global:
  # -- additionalDeploymentLabels can be used to map organizational structures onto system objects
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  additionalDeploymentLabels: {}

# -- Controls whether the pod may use the node network namespace
hostNetwork: false

# -- Specifies Pod's DNS policy
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
dnsPolicy: ""

# -- Specifies Pod's DNS condig
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
dnsConfig:
  {}
  # options:
  # - name: ndots
  #   value: "1"

# -- deploymentAnnotations defines annotations to add to all Studio deployments
deploymentAnnotations:
  {}
  #  key: "value"

# -- deploymentLabels defines labels to add to all Studio deployment
deploymentLabels: {}

# -- podLabels defines labels to add to all Studio pod(s)
podLabels: {}
