name: Studio Release Candidate

on:
  push:
    branches:
      - release/**
    paths:
      - 'charts/studio/**'
      - '!charts/rasa/**'

env:
  ARTIFACT_REGISTRY: europe-west3-docker.pkg.dev
  HELM_REPOSITORY: rasa-releases
  HELM_CHART: helm-charts
  KAFKA_HELM_VERSION: 26.8.0
  POSTGRESQL_HELM_VERSION: 13.4.0
  NGINX_HELM_VERSION: 4.9.1

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0

      - name: Install Helm 3
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78
        with:
          version: v3.11.2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d
        with:
          token_format: 'access_token'
          credentials_json: ${{ secrets.HELM_RELEASE_CREDENTIALS }}

      - name: Login to Helm registry using Google Auth token
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | helm registry login -u oauth2accesstoken --password-stdin https://${{ env.ARTIFACT_REGISTRY }}

      - name: Read Helm Chart
        id: chart-info
        uses: miraai/read-helm-chart-yaml@9a798908719da8d062b86097d4ff1ad85abfc7aa
        with:
          path: charts/studio/

      - name: Check if its release candidate
        id: rc-check
        if: github.event_name != 'pull_request' && !startsWith(github.base_ref, 'release/')
        run: |
          VERSION=${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}
        
          if [[ $VERSION == *-rc* ]]; then
            echo "The Helm chart version is a release candidate."
            echo "rc=true" >> $GITHUB_OUTPUT
          else
            echo "The Helm chart version is not a release candidate. Please add `-rc*` after the version in Chart.yaml."
            echo "rc=false" >> $GITHUB_OUTPUT
          fi

      - name: Package Helm release
        if: steps.rc-check.outputs.rc == 'true'
        id: package
        run: helm package charts/studio/ --dependency-update

      - name: Push Helm Charts to Google Artifact Registry
        if: steps.rc-check.outputs.rc == 'true'
        run: helm push ${{ steps.chart-info.outputs.name }}-${{ steps.chart-info.outputs.version }}.tgz oci://${{ env.ARTIFACT_REGISTRY }}/${{ env.HELM_REPOSITORY }}/${{ env.HELM_CHART }}
  
  release-to-replicated:
    runs-on: ubuntu-22.04
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0

      - name: Install Helm 3
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78
        with:
          version: v3.11.2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d
        with:
          token_format: 'access_token'
          credentials_json: ${{ secrets.HELM_RELEASE_CREDENTIALS }}

      - name: Login to Helm registry using Google Auth token
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | helm registry login -u oauth2accesstoken --password-stdin https://${{ env.ARTIFACT_REGISTRY }}

      - name: Read Helm Chart
        id: chart-info
        uses: miraai/read-helm-chart-yaml@9a798908719da8d062b86097d4ff1ad85abfc7aa
        with:
          path: charts/studio/

      - name: Add Helm Chart repositories
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

      - name: Pull Helm Charts
        id: get_chart
        run: |
          helm pull oci://${{ env.ARTIFACT_REGISTRY }}/${{ env.HELM_REPOSITORY }}/${{ env.HELM_CHART }}/${{ steps.chart-info.outputs.name }} --version ${{ steps.chart-info.outputs.version }} -d ./replicated
          helm pull ingress-nginx/ingress-nginx --version ${{ env.NGINX_HELM_VERSION }}
          helm pull oci://registry-1.docker.io/bitnamicharts/postgresql --version ${{ env.POSTGRESQL_HELM_VERSION }} -d ./replicated
          helm pull oci://registry-1.docker.io/bitnamicharts/kafka -d --version ${{ env.KAFKA_HELM_VERSION }} ./replicated

      - name: Update Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec. chart.version = "${{ steps.chart-info.outputs.chart-version }}"' replicated/studio-chart.yaml

      - name: Update Kafka Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec. chart.version = "${{ env.KAFKA_HELM_VERSION }}"' replicated/kafka-chart.yaml

      - name: Update PostgresSQL Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec. chart.version = "${{ env.POSTGRESQL_HELM_VERSION }}"' replicated/postgresql-chart.yaml

      - name: Update Nginx Ingress Helm chart version for Replicated release
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: yq -i '.spec. chart.version = "${{ env.NGINX_HELM_VERSION }}"' replicated/ingress-nginx-chart.yaml

      - name: Create the development release
        uses: replicatedhq/action-kots-release@configurable-endpoint
        with:
          replicated-app: ${{ secrets.REPLICATED_APP }}
          replicated-api-token: ${{ secrets.REPLICATED_TOKEN }}
          replicated-api-origin: https://api.replicated.com/vendor
          yaml-dir: ./replicated
          promote-channel: "Development"
          version: ${{ steps.chart-info.outputs.chart-version }}
