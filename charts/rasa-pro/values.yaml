# Default values for rasa-pro.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

############################
# THIS IS WORK IN PROGRESS #
############################

# -- (string) Override name of app
nameOverride: ""
# -- (string) Override the full qualified app name
fullnameOverride: ""

# -- Repository pull secrets
imagePullSecrets:
  []
  # - name: regcred

rasaPro:
  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    repository: "europe-west3-docker.pkg.dev/rasa-releases/rasa-pro/rasa-pro"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent
    # -- Specifies image tag
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  settings:
    debugMode: false
    initialModel: ""
    trainInitialModel: false
    token: ""
    cors: '*'
    enableAPI: true

    credentials:
      enabled: true
      additionalChannelCredentials: {}

    telemetry:
      enabled: true

    endpoints:
      models:
        enabled: false
        url: ""
        token: "token"
        waitTimeBetweenPulls: 20
        useRasaXasModelServer:
          enabled: false
          tag: "production"
      trackerStore:
        enabled: true
        type: sql
        dialect: "postgresql"
        url: ${DB_HOST}
        username: ${DB_USER}
        password: ${DB_PASSWORD}
        db: ${DB_DATABASE}
        login_db: ${DB_DATABASE}
      lockStore:
        enabled: false
        type: "redis"
        url: ${REDIS_HOST}
        port: ${REDIS_PORT}
        password: ${REDIS_PASSWORD}
        db: "1"
      eventBroker:
        enabled: false
        type: "pika"
        url: ${RABBITMQ_HOST}
        username: ${RABBITMQ_USERNAME}
        password: ${RABBITMQ_PASSWORD}
        port: ${RABBITMQ_PORT}
        queues:
          - rasa_production_events
      action:
        endpointURL: /webhook
      additionalEndpoints: {}

    rasaX:
      enabled: false
      token: "rasaXToken"
      url: ""
      useConfigEndpoint: false

  args: []
  extraArgs: []
  command: []
  extraEnv: []
  initContainers: []
  extraContainers: []
  volumes: []
  volumeMounts: []

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Define service
  service:
    # -- Specify service type
    type: ClusterIP
    # -- Specify service port
    port: 80
    # -- Specify service target port
    targetPort: 80

  # -- Override default liveness probe settings
  livenessProbe:
    enabled: false
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Override default readiness probe settings
  readinessProbe:
    enabled: false
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Configure the ingress resource that allows you to access the deployment installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Specifies whether an ingress service should be created
    enabled: false
    # -- Specifies the ingress className to be used
    className: ""
    # -- Labels to add to the ingress
    labels: {}
    # -- Annotations to add to the ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Specifies the hosts for this ingress
    hosts:
      - host: chart-example.local
        paths:
          - path: /api
            pathType: Prefix
        extraPaths: []
    # -- Spefices the TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Specifies the resources limits and requests
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Specifies the HPA settings
  autoscaling:
    # -- Specifies whether autoscaling should be enabled
    enabled: false
    # -- Specifies the minimum number of replicas
    minReplicas: 1
    # -- Specifies the maximum number of replicas
    maxReplicas: 100
    # -- Specifies the target CPU/Memory utilization percentage
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Network policy settings
networkPolicy:
  # -- Specifies whether to enable network policies
  enabled: false
  # -- Specifies whether to apply denyAll network policy
  denyAll: false
  # -- Allow for traffic from a given CIDR - it's required in order to make kubelet able to run live and readiness probes
  nodeCIDR: []
  #  - ipBlock:
  #      cidr: 0.0.0.0/0

global:
  # -- additionalDeploymentLabels can be used to map organizational structures onto system objects
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  additionalDeploymentLabels: {}

# -- Controls whether the pod may use the node network namespace
hostNetwork: false

# -- Specifies Pod's DNS policy
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
dnsPolicy: ""

# -- Specifies Pod's DNS condig
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
dnsConfig:
  {}
  # options:
  # - name: ndots
  #   value: "1"

## Settings for Rasa Action Server
## See: https://github.com/RasaHQ/helm-charts/tree/main/charts/rasa-action-server
rasa-action-server:
  # -- Install Rasa Action Server
  install: false

  external:
    # -- Determine if external URL is used
    enabled: false
    # -- External URL to Rasa Action Server
    url: ""

## Settings for Duckling
## See: https://github.com/RasaHQ/helm-charts/tree/main/charts/duckling
duckling:
  # -- Install Duckling
  install: false

  external:
    # -- Determine if external URL is used
    enabled: false
    # -- External URL to Duckling
    url: ""
