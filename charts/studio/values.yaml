# Default values for studio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- (string) Override name of app
nameOverride: ""
# -- (string) Override the full qualified app name
fullnameOverride: ""

imagePullSecrets:
    # - name: regcred

############################
# THIS IS WORK IN PROGRESS #
############################
backend:
  replicaCount: 1

  image:
    repository:
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  environmentVariables:
    - name: DATABASE_URL
      value: ""
      # valueFrom:
      #   secretKeyRef:
      #     name:
      #     key:
    - name: SECURITY_PROTOCOL
      value: "SASL_SSL"
    - name: SASL_MECHANISM
      value: ""
    - name: SASL_USERNAME
      value: ""
    - name: SASL_PASSWORD
      value: ""
    - name: KAFKA_BROKER_ADDRESS
      value: ""
    - name: KAFKA_TOPIC
      value: ""
    - name: KAFKA_DLQ_TOPIC
      value: ""
    - name: KAFKA_CLIENT_ID
      value: ""
    - name: GROUP_ID
      value: ""
    - name: KEYCLOAK_URL
      value: ""
    - name: KEYCLOAK_REALM
      value: ""
    - name: KEYCLOAK_API_USERNAME
      value: ""
    - name: KEYCLOAK_API_PASSWORD
      value: ""
    - name: KEYCLOAK_API_GRANTTYPE
      value: ""


  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/studio-backend: runtime/default

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  service:
    type: ClusterIP
    port: 4000

  livenessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  readinessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  migration:
    enable: false
    image:
      repository:
      tag:
    database_url:

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

frontend:
  replicaCount: 1

  image:
    repository:
    pullPolicy: IfNotPresent
    tag: ""

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    type: ClusterIP
    port: 8080

  livenessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  readinessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

eventIngestion:
  replicaCount: 1

  image:
    repository:
    pullPolicy: IfNotPresent
    tag: ""

  environmentVariables:
    - name: DATABASE_URL
      value: ""
    - name: SECURITY_PROTOCOL
      value: "SASL_SSL"
    - name: SASL_MECHANISM
      value: "SCRAM-SHA-256"
    - name: SASL_USERNAME
      value: ""
    - name: SASL_PASSWORD
      value: ""
    - name: KAFKA_BROKER_ADDRESS
      value: ""
    - name: KAFKA_TOPIC
      value: ""
    - name: KAFKA_DLQ_TOPIC
      value: ""
    - name: KAFKA_CLIENT_ID
      value: ""
    - name: GROUP_ID
      value: ""

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/studio-event-ingestion: runtime/default

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

keycloak:
  replicaCount: 1

  image:
    repository:
    pullPolicy: IfNotPresent
    tag: ""

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/studio-keycloak: runtime/default

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  service:
    type: ClusterIP
    port: 8080

  livenessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  readinessProbe:
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

networkPolicy:
  enabled: false
  denyAll: false
