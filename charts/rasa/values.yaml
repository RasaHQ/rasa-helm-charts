# Default values for rasa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

############################
# THIS IS WORK IN PROGRESS #
############################

# -- (string) Override name of app
nameOverride: ""
# -- (string) Override the full qualified app name
fullnameOverride: ""

# -- Repository pull secrets
imagePullSecrets:
  []
  # - name: regcred

# -- license key for Rasa Pro Services.
rasaProLicence:
  secretName:
  secretKey:

# Rasa Open Source
rasa:
  enabled: true
  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    repository: "europe-west3-docker.pkg.dev/rasa-releases/rasa-pro/rasa-pro"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent
    # -- Specifies image tag
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  # -- Allow the deployment to perform a rolling update
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy: {}
  #   type: RollingUpdate
  #   rollingUpdate:
  #     maxSurge: 1
  #     maxUnavailable: 0

  # Rasa Plus is the drop-in replacement of Rasa
  plus:
    enabled: true

  settings:
    # -- Enable debug mode
    debugMode: false
    # -- Initial model to download and load if a model server or remote storage is not used. It has to be a URL (without auth) that points to a tar.gz file
    initialModel: ""
    # -- Train a model if an initial model is not defined. This parameter is ignored if the `applicationSettings.initialModel` is defined
    trainInitialModel: false
    # -- Port on which Rasa runs
    port: 5005
    # -- Scheme by which the service are accessible
    scheme: http
    # -- Start the web server API in addition to the input channel
    # -- Rasa API supports two authentication methods, Token based Auth or JWT
    # -- Enter details in token or (jwtSecret, jwtMethod) to enable either of them
    enableAPI: true
    # -- Token Rasa accepts as authentication token from other Rasa services
    authToken: # "rasaToken"
      secretName: ""
      secretKey: ""
    # -- JWT Token
    jwtSecret:
      secretName: ""
      secretKey: ""
    # -- JWT Algorithm
    jwtMethod: HS256
    # -- CORS for the passed origin. Default is * to allow all origins
    cors: '*'

    ## Note: this credentials configuration is ignored if `applicationSettings.rasaX.useConfigEndpoint=true`
    credentials:
      # -- Enable credentials configuration for channel connectors
      enabled: true
      # -- Additional channel credentials which should be used by Rasa to connect to various
      # input channels
      ## See: https://rasa.com/docs/rasa/messaging-and-voice-channels
      additionalChannelCredentials: {}
      #  rest:
      #  facebook:
      #    verify: "rasa"
      #    secret: "<SECRET>"
      #    page-access-token: "<PAGE-ACCESS-TOKEN>"

    # See: https://rasa.com/docs/rasa/telemetry/telemetry/
    telemetry:
      # -- Allow Rasa to collect anonymous usage details
      enabled: true
      # -- Print telemetry data to stdout
      debug: falseh

    endpoints:
      # -- Not all parameters are mandatory
      # -- See: https://rasa.com/docs/rasa/model-storage
      models:
        enabled: true
        # TODO: Define if this is necessary and in which cases
        token:
          enabled: false
          secretName: ""
          secretKey: ""
        url: ""
        waitTimeBetweenPulls: 20
      # -- Not all parameters are mandatory
      # -- See: https://rasa.com/docs/rasa/tracker-stores
      trackerStore:
        enabled: true
        type: "dynamo"
        # dialect: ""
        # url: ""
        # port: ""
        # keyPrefix: ""
        # db: 0
        # password: ""
        # username: ""
        # domain: ""
        # recordExp: ""
        # loginDb: ""
        # useSsl: false # ssl volume depends on this
        # query: ""
      # -- See: https://rasa.com/docs/rasa/lock-stores
      lockStore:
        enabled: true
        url: ""
        port: ""
        password: ""
        db: "1"
        keyPrefix: "" # alphanumeric value to prepend to lock store keys
        useSsl: false
        socketTimeout: ""
      # -- See: https://rasa.com/docs/rasa/event-brokers
      eventBroker:
        enabled: true
        type: ""
        # url: ""
        # username: ""
        # password: ""
        # port: ""
        # queues: 
        #   - rasa_production_events
        # db: ""
        # dialect: ""
        # securityProtocol: SASL_SSL
        # topic: topic
        # saslUsername: username
        # saslPassword: password
        # saslMechanism: PLAIN
        # sslCaFile: CARoot.pem
        # sslCertFile: certificate.pem
        # sslKeyFile: key.pem
        # sslCheckHostname: True
        # exchangeName: exchange
      # -- See: https://rasa.com/docs/rasa/monitoring/tracing/
      tracing:
        enabled: true
        type: jaeger
        # host: localhost
        # port: 6831
        # service_name: rasa
        # sync_export: ~
        # endpoint: my-otlp-host:4318
        # insecure: false
        # root_certificates: ./tests/unit/tracing/fixtures/ca.pem
      actionEndpoint:
        url: /webhook
      additionalEndpoints: {}

    # -- Rasa Pro License
    # See: https://rasa.com/connect-with-rasa/
    # Make this global
    rasaProLicence:
      secretName:
      secretKey:
    # -- Environment: development or production
    rasaEnvironment: development
    # -- Synchronization mechanism used by Rasa
    lockStore:
      # -- Lifetime of the ticket associated with a lock
      ticketLockLifetime: 60
    tracing:
      serviceName: rasa
    sanicServer:
      # -- Number of unaccepted connections the server allows before refusing new connections
      backlog: 100
      # -- Number of Sanic worker processes in the HTTP Server and Input Channel Server
      workers: 1
    # -- Settings to customize connections to Postgres
    postgresTrackerStore:
      # -- PostgreSQL schema to access
      schema: public
      # -- Pool Size configuration
      poolSize: 50
      # -- Maximum overflow size of the pool
      maxOverflow: 100
    # -- Settings to setup RabbitMQ SSL
    rabbitmq:
      enabled: false
      # -- path to the SSL client certificate
      sslClientCertificate:
        secretName:
        secretKey:
      # -- path to the SSL client key
      sslClientKey:
        secretName:
        secretKey:
    # -- Set log levels for Rasa and external libraries
    # See: https://rasa.com/docs/rasa/next/command-line-interface/#log-level
    logging:
      # -- Rasa Log Level
      logLevel: info
      # -- Configure log level for Tensorflow, asyncio, APScheduler, SocketIO, Matplotlib, RabbitMQ, Kafka
      logLevelLibraries: error
      # -- Configure log level for Matplotlib
      logLevelMatplotlib: error
      # -- Configure log level for RabbitMQ
      logLevelRabbitMq: error
      # -- Configrue log level for Kafka
      logLevelKafka: error
      # -- Configure log level for Presidio
      logLevelPresidio: error
      # -- Configure log level for Faker
      logLevelFaker: error
      # -- Force logging in JSON
      forceJsonLogging: false
    # -- cache for `rasa train` command
    cache:
      # -- maximum size for the cache
      maxSize: 1000
      # -- name of the cache file
      name: cache.db
      # -- default location of the cache
      # -- default is equivalent of Path(".rasa", "cache")
      directory:
    # -- HTTP URL to the duckling service
    ducklingHttpUrl:
    # -- Tensorflow parameters
    tensorflow:
      gpuMemoryAlloc:
      interOpParallelismThreads:
      intraOpParallelismThreads:
      deterministicOps: false
    shellStreamReadingTimeoutInSeconds: 10
    maxNumberOfPreditions: 10

  # -- Override the default arguments for the container
  args: []
  # -- Add additional arguments to the default one
  extraArgs: []
  # -- Override the default command for the container
  command: []
  # -- Add extra environment variables
  extraEnv: []
    # - name: SOME_CUSTOM_ENV_VAR
    #   value: "custom value"
    # - name: SOME_CUSTOM_ENV_VAR_FROM_SECRET
    #   valueFrom:
    #     secretKeyRef:
    #       name:
    #       key:

  # -- Allow to specify init containers for the Rasa Open Source Deployment
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  initContainers: []
  #  - name: init
  #    image: "busybox"
  #    command: ["bash", "-c"]
  #    args:
  #      - echo "init container"

  # -- Allow to specify additional containers for the Rasa Open Source Deployment
  extraContainers: []
  #  - name: extra
  #    image: "busybox"
  #    command: ["bash", "-c"]
  #    args:
  #      - echo "init container"

  # -- Specify additional volumes to mount in the rasa-oss container
  ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
  volumes: []
  #   - hostPath:
  #       path: <HOST_PATH>
  #     name: <VOLUME_NAME>

  # -- Specify additional volumes to mount in the rasa-oss container
  volumeMounts: []
    # - name: <VOLUME_NAME>
    #   mountPath: <CONTAINER_PATH>
    #   readOnly: true

  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/rasa: runtime/default
  
  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Define service
  service:
    # -- Specify service type
    type: ClusterIP
    # -- Specify service port
    port: 5005
    # -- Specify service target port
    targetPort: 5005
    # -- Annotations to add to the service
    annotations: {}
    # -- Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
    nodePort:
    # -- Exposes the Service externally using a cloud provider's load balancer
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    loadBalancerIP:
    # -- Enable client source IP preservation
    ## Ref: http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    externalTrafficPolicy: Cluster

  # -- Override default liveness probe settings
  livenessProbe:
    enabled: false
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Override default readiness probe settings
  readinessProbe:
    enabled: false
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Configure the ingress resource that allows you to access the deployment installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Specifies whether an ingress service should be created
    enabled: false
    # -- Specifies the ingress className to be used
    className: ""
    # -- Labels to add to the ingress
    labels: {}
    # -- Annotations to add to the ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Specifies the hosts for this ingress
    hosts:
      - host: chart-example.local
        paths:
          - path: /api
            pathType: Prefix
        extraPaths: []
    # -- Spefices the TLS configuration for ingress
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Specifies the resources limits and requests
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Specifies the HPA settings
  autoscaling:
    # -- Specifies whether autoscaling should be enabled
    enabled: false
    # -- Specifies the minimum number of replicas
    minReplicas: 1
    # -- Specifies the maximum number of replicas
    maxReplicas: 100
    # -- Specifies the target CPU/Memory utilization percentage
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Settings for Rasa Pro Services
rasaProServices:
  # -- Enable Rasa Pro Services deployment
  enabled: true

  # -- Specifies number of replicas
  replicaCount: 1
  # -- Define image settings
  image:
    # -- Specifies image repository
    repository: "europe-west3-docker.pkg.dev/rasa-releases/rasa-pro/rasa-pro"
    # -- Specifies image pull policy
    pullPolicy: IfNotPresent
    # -- Specifies image tag
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  # -- Allow the deployment to perform a rolling update
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0

  # See: https://rasa.com/docs/rasa/deploy/deploy-rasa-pro-services#docker-container-configuration-reference
  environmentVariables:
    # -- address of the Kafka broker.
    KAFKA_BROKER_ADDRESS:
      value: ""
    # -- topic Rasa Plus publishes events to and Rasa Pro consumes from
    KAFKA_TOPIC:
      value: "rasa_core_events"
    # -- Set the log level of the application
    LOGGING_LEVEL:
      value: "INFO"
    # -- URL of the data lake to store analytics data in
    RASA_ANALYTICS_DB_URL:
      value: ""
      # secret:
      #   name:
      #   key:
    # -- SASL mechanism to use for authentication.
    KAFKA_SASL_MECHANISM:
      value: "PLAIN"
    # -- username for SASL authentication.
    KAFKA_SASL_USERNAME:
      value: ""
    # -- password for SASL authentication
    KAFKA_SASL_PASSWORD:
      secret:
        name:
        key:
    # -- security protocol to use for communication with Kafka
    KAFKA_SECURITY_PROTOCOL:
      value: "PLAINTEXT"
    # -- filepath for SSL CA Certificate that will be used to connect with Kafka
    KAFKA_SSL_CA_LOCATION:
      value: ""
      
  # -- Define service account
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to add to the pod
  podAnnotations: {}
    # container.apparmor.security.beta.kubernetes.io/rasa: runtime/default

  # -- Define pod security context
  podSecurityContext:
    enabled: true
    # fsGroup: 2000

  # -- Define security context that allows you to overwrite the pod-level security context
  securityContext:
    enabled: true
    # privileged: false
    # allowPrivilegeEscalation: false
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # seccompProfile:
    #   type: RuntimeDefault

  # -- Define service
  service:
    # -- Specify service type
    type: ClusterIP
    # -- Specify service port
    port: 8732
    # -- Specify service target port
    targetPort: 8732
    # -- Annotations to add to the service
    annotations: {}

  # -- Override default liveness probe settings
  livenessProbe:
    enabled: false
    httpGet:
      path: /healthcheck
      port: 8732
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Override default readiness probe settings
  readinessProbe:
    enabled: false
    httpGet:
      path: /healthcheck
      port: 8732
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 6

  # -- Specifies the resources limits and requests
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Specifies the HPA settings
  autoscaling:
    # -- Specifies whether autoscaling should be enabled
    enabled: false
    # -- Specifies the minimum number of replicas
    minReplicas: 1
    # -- Specifies the maximum number of replicas
    maxReplicas: 100
    # -- Specifies the target CPU/Memory utilization percentage
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Allow the deployment to be scheduled on selected nodes
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Allow the deployment to schedule using affinity rules
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# Network policy settings
networkPolicy:
  # -- Specifies whether to enable network policies
  enabled: false
  # -- Specifies whether to apply denyAll network policy
  denyAll: false
  # -- Allow for traffic from a given CIDR - it's required in order to make kubelet able to run live and readiness probes
  nodeCIDR: []
  #  - ipBlock:
  #      cidr: 0.0.0.0/0

global:
  # -- additionalDeploymentLabels can be used to map organizational structures onto system objects
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  additionalDeploymentLabels: {}

# -- Controls whether the pod may use the node network namespace
hostNetwork: false

# -- Specifies Pod's DNS policy
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
dnsPolicy: ""

# -- Specifies Pod's DNS condig
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
dnsConfig:
  {}
  # options:
  # - name: ndots
  #   value: "1"

# -- Annotations to add to the rasa-oss deployment
deploymentAnnotations: {}
  #  key: "value"

# -- Labels to add to the rasa-oss deployment
deploymentLabels: {}

# -- Labels to add to the rasa-oss's pod(s)
podLabels: {}

## Settings for Rasa Action Server
actionServer:
  # -- Install Rasa Action Server
  install: false

  external:
    # -- Determine if external URL is used
    enabled: false
    # -- External URL to Rasa Action Server
    url: ""

## Settings for Duckling
duckling:
  # -- Install Duckling
  install: false

  external:
    # -- Determine if external URL is used
    enabled: false
    # -- External URL to Duckling
    url: ""
