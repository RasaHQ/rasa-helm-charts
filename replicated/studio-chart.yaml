apiVersion: kots.io/v1beta2
kind: HelmChart
metadata:
  name: studio
spec:
  # chart identifies a matching chart from a .tgz
  chart:
    name: studio
    chartVersion: 0.4.1-rc1
  
  releaseName: studio
  # values are used in the customer environment, as a pre-render step
  # these values will be supplied to helm template
  values:
    imagePullSecrets:
      - name: '{{repl ImagePullSecretName }}'
    repository: '{{repl HasLocalRegistry | ternary LocalRegistryHost "proxy.replicated.com" }}/{{repl HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/europe-west3-docker.pkg.dev/rasa-releases/studio/" ) }}'
    tag: '{{repl ConfigOption "studio_image_tag" }}'

    config:
      # -- Defines the host name for all the Studio ingress resources. Make sure you provide a valid host name.
      ingressHost: '{{repl ConfigOption "ingress_hostname" }}'
      # -- Define if you will be using https or http with the ingressHost
      connectionType: "http"
      # -- The postgres database instance details for Studio to connect to.
      database:
        # -- The database host name
        host: '{{repl ConfigOption "database_host" }}'
        # -- The database port
        port: '{{repl ConfigOption "database_port" }}'
        # -- The database username
        username: '{{repl ConfigOption "database_username" }}'
        # -- The database password
        password:
          secretName: "studio-secrets"
          secretKey: "DATABASE_PASSWORD"
        # -- Set to true if you want to use SSL for db connection
        preferSSL: "false"
        # If true the server will reject db connection which is not present list of supplied CAs.
        rejectUnauthorized: ""
        # -- The database name for model training and running service
        modelServiceDatabaseName: '{{repl ConfigOption "model_service_database" }}'
        # -- The database name for keycloak user management service
        keycloakDatabaseName: '{{repl ConfigOption "keycloak_database" }}'
      keycloak:
        # -- The admin username for Keycloak. This username is used to login to Keycloak admin console.
        adminUsername: "kcadmin"
        # -- The admin password for Keycloak. This password is used to login to Keycloak admin console.
        adminPassword:
          secretName: "studio-secrets"
          secretKey: "KEYCLOAK_ADMIN_PASSWORD"
    
    backend:
      environmentVariables:
        DATABASE_URL:
          value: 'postgresql://{{repl ConfigOption "database_username" }}:{{repl ConfigOption "database_password" }}@{{repl ConfigOption "database_host" }}:{{repl ConfigOption "database_port" }}/studio?schema=public'
        KEYCLOAK_API_PASSWORD:
          secret:
            name: "studio-secrets"
            key: "KEYCLOAK_API_PASSWORD"
        KEYCLOAK_CLIENT_ID:
          value: '{{repl ConfigOption "keycloak_client_id" }}'
        DOCKER_IMAGE_TAG:
          value: 'europe-west3-docker.pkg.dev/rasa-releases/rasa-plus/rasa-plus:{{repl ConfigOption "docker_image_tag" }}'
      migration:
        waitForIt: repl{{ eq (ConfigOption "wait_for_it") "1"}}
      ingress:
        className: '{{repl ConfigOption "ingress_class" }}'
        annotations: repl{{ ConfigOption "annotations" | nindent 10 }}
    
    webClient:
      ingress:
        className: '{{repl ConfigOption "ingress_class" }}'
        annotations: repl{{ ConfigOption "annotations" | nindent 10 }}

    eventIngestion:
      environmentVariables:
        DATABASE_URL:
          value: 'postgresql://{{repl ConfigOption "database_username" }}:{{repl ConfigOption "database_password" }}@{{repl ConfigOption "database_host" }}:{{repl ConfigOption "database_port" }}/studio?schema=public'
        KAFKA_SASL_MECHANISM:
          value: '{{repl ConfigOption "kafka_sasl_mechanism" }}'
        KAFKA_SASL_USERNAME:
          value: '{{repl ConfigOption "kafka_username" }}'
        KAFKA_SASL_PASSWORD:
          value: '{{repl ConfigOption "kafka_password" }}'
        KAFKA_BROKER_ADDRESS:
          value: '{{repl ConfigOption "kafka_broker" }}'
        KAFKA_GROUP_ID:
          value: "studio"
        KAFKA_ENABLE_SSL:
          value: '{{repl ConfigOption "kafka_ssl" }}'

    keycloak:
      environmentVariables:
        KC_PROXY:
          value: "edge"
      ingress:
        className: '{{repl ConfigOption "ingress_class" }}'
        annotations: repl{{ ConfigOption "annotations" | nindent 10 }}

    modelService:
      # -- repository specifies image repository for Studio
      repository: '{{repl HasLocalRegistry | ternary LocalRegistryHost "proxy.replicated.com" }}/{{repl HasLocalRegistry | ternary LocalRegistryNamespace (print "proxy/" (LicenseFieldValue "appSlug") "/europe-west3-docker.pkg.dev/rasa-releases/model-training-and-running-services/" ) }}'
      # -- tag specifies image tag for Studio
      tag: "3.2.2"
      rasaProLicense:
        secretKey: "RASA_PRO_LICENCE"
      gcpCredentials:
        secretName: "gcp-secrets"
        secretKey: "GCP_CREDENTIALS"
      openAiKey:
        secretKey: "OPENAI_API_KEY_SECRET_KEY"
      kafka:
        brokerAddress: '{{repl ConfigOption "kafka_broker" }}'
        securityProtocol: '{{repl ConfigOption "kafka_security_protocol" }}'
        saslMechanism: '{{repl ConfigOption "kafka_sasl_mechanism" }}'
      storage:
        # -- use "gcs" for Google Cloud Storage, "aws_s3" for AWS S3
        type: '{{repl ConfigOption "storage_type" }}'
        # -- Name of the storage bucket. Make sure to pre-create this bucket.
        bucketName: '{{repl ConfigOption "bucket_name" }}'
        # -- Needed if STORAGE_TYPE is set to aws_s3. The region where the bucket is located.
        regionName: '{{repl ConfigOption "aws_region_name" }}'
        # -- Needed if STORAGE_TYPE is set to aws_s3
        awsAccessKeyId:
          secretName: "studio-secrets"
          secretKey: "AWS_ACCESS_KEY_ID"
        # -- Needed if STORAGE_TYPE is set to aws_s3
        awsSecretAccessKey:
          secretName: "studio-secrets"
          secretKey: "AWS_SECRET_ACCESS_KEY"
        # -- Needed if STORAGE_TYPE is set to gcs. The project ID of the GCP project.
        googleCloudProject: '{{repl ConfigOption "google_cloud_project" }}'
        # -- Needed if STORAGE_TYPE is set to gcs. The zone where the bucket is located.
        cloudskdComputeZone: '{{repl ConfigOption "cloudsdk_compute_zone" }}'
        # -- Needed if STORAGE_TYPE is set to gcs. The service account email address.
        storageServiceAccount:
          secretName: "studio-secrets"
          secretKey: "STORAGE_SIGNED_URL_SERVICE_ACCOUNT"
      
      training:
        orchestrator:
          # -- orchestrator.replicaCount specifies number of replicas
          replicaCount: 1
        consumer:
          replicaCount: 1

      running:
        orchestrator:
          # -- orchestrator.replicaCount specifies number of replicas
          replicaCount: 1
          ingress:
            className: '{{repl ConfigOption "ingress_class" }}'
            annotations: repl{{ ConfigOption "annotations" | nindent 14 }}
        consumer:
          replicaCount: 1

      persistence:
        # -- Should the PV and PVC be created
        create: true
        # -- Type of the volume that will be used to store the training data
        # Valid values: local, nfs. Leave this empty if you are using AWS EFS.
        type: '{{repl ConfigOption "persistence_type" }}'
        # -- If you are deploying to AWS and using EFS for volume, set this value to true.
        aws: repl{{ eq (ConfigOption "nfs_aws_type") "1"}}
        # -- FileSystemId::MountPoint of the AWS EFS volume. For example "fs-0bbaea252301ca2d4::fsap-0b4550cc4c77377fd"
        efs_id: '{{repl ConfigOption "efs_id" }}'
        # -- Storage Class name for PV. Should be `efs-sc` if you are using AWS EFS. It's "standard-rwo" if you are using NFS server.
        storageClassName: '{{repl ConfigOption "storage_class_name" }}'
        # -- Storage Capacity for PV
        storageCapacity: 1Gi
        # -- Storage requests for PVC
        storageRequests: 1Gi
        # -- DNS name or IP address of the NFS server. This value is used only when type is set to nfs
        nfsServer: '{{repl ConfigOption "nfs_server" }}'
        # -- Directory from the host machine that will be mounted to the container for training data. This value is used only when type is set to local
        hostPath: '{{repl ConfigOption "host_path" }}'
        # -- Node on which the PV will be created
        # This value is used only when type is set to local
        localNodeName: '{{repl ConfigOption "local_node_name" }}'
